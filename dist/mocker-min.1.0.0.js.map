{"version":3,"sources":["webpack:///mocker-min.1.0.0.js","webpack:///webpack/bootstrap dc5d8b213284a426b62a","webpack:///./src/mocker/Data/index.js","webpack:///./src/mocker/constant.js","webpack:///./src/mocker/config.js","webpack:///./src/mocker/Gui/Browser.js","webpack:///./src/mocker/MockerHttpRequest/index.js","webpack:///./package.json","webpack:///./src/mocker/Data/Database.js","webpack:///./src/mocker/MockerHttpRequest/MockerHttpRequest.js","webpack:///./src/mocker/util/Util.js","webpack:///./src/mocker/util/index.js","webpack:///./src/mocker/Gui/Browser.html","webpack:///./src/mocker/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_Database","keys","forEach","key","MOCKERHTTPREQUEST_DELAY","XHR_EVENTS","READYSTATECHANGE","LOADSTART","PROGRESS","ABORT","ERROR","LOAD","TIMEOUT","LOADEND","HTTP_STATUS_CODES","100","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","422","500","501","502","503","504","505","MOCKER_DATABASE_NAME","_constant","default","timeout","_interopRequireDefault","obj","_Browser","_Browser2","_Data","MockerBrowser","init","rootElement","document","createElement","className","innerHTML","body","appendChild","this","setInitialStyle","querySelector","onclick","switchStatus","bind","switchAdd","switchList","handleSave","window","mocker","status","classList","remove","add","event","open","close","style","display","getAllMockerRecord","then","items","map","ele","index","array","url","method","response","preventDefault","formElement","console","log","mock","_MockerHttpRequest","MockerHttpRequest","version","description","main","scripts","dev","build","clean","repository","type","keywords","author","license","bugs","homepage","devDependencies","babel-core","babel-loader","babel-preset-es2015","css-loader","file-loader","html-loader","html-webpack-plugin","url-loader","webpack","webpack-dev-server","createMockerDatabase","request","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","READ_WRITE","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","onerror","Error","onsuccess","db","target","result","onupgradeneeded","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","getMockerRecord","checkMockerRecord","transaction","Promise","resolve","reject","e","openCursor","cursor","push","continue","addMockerRecord","deleteMockerRecord","updateMockerRecord","_typeof","test","undefined","Symbol","iterator","constructor","replaceXMLHttpRequest","XMLHttpRequest","resetXMLHttpRequest","_XMLHttpRequest","ActiveXObject","_ActiveXObject","defineProperties","_xmlHttpRequest","writable","_listeners","_requestHeader","config","_config2","record","onload","onloadend","onloadstart","onprogress","onreadystatechange","ontimeout","readyState","responseText","responseType","responseURL","responseXML","statusText","MockXMLHttpRequestEventTarget","MockEventTarget","find","_util","_config","MockerHttpRequestPrototype","DONE","HEADERS_RECEIVED","LOADING","OPENED","UNSENT","abort","dispatchEvent","Event","getAllResponseHeaders","getResponseHeader","onabort","async","username","password","that","item","overrideMimeType","send","data","done","setRequestHeader","setTimeout","upload","MockXMLHttpRequestEventTargetPrototype","MockEventTargetPrototype","addEventListener","callback","stack","getVariableType","length","removeEventListener","splice","createPrototypeChain","arguments","error","create","apply","Array","slice","toString","_Util","_interopRequireWildcard","newObj","_package","npmPackage"],"mappings":"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","file":"mocker-min.1.0.0.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 11);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Database = __webpack_require__(6);\n\nObject.keys(_Database).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Database[key];\n    }\n  });\n});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Created by mac on 17/1/20.\n */\n// MockerHttpRequest\n\n// 默认mock延迟时间\nvar MOCKERHTTPREQUEST_DELAY = exports.MOCKERHTTPREQUEST_DELAY = 0;\n// 默认是否匹配到mock记录\n\nvar XHR_EVENTS = exports.XHR_EVENTS = {\n    READYSTATECHANGE: \"readystatechange\",\n    LOADSTART: \"loadstart\",\n    PROGRESS: \"progress\",\n    ABORT: \"abort\",\n    ERROR: \"error\",\n    LOAD: \"load\",\n    TIMEOUT: \"timeout\",\n    LOADEND: \"loadend\"\n};\n\nvar HTTP_STATUS_CODES = exports.HTTP_STATUS_CODES = {\n    100: \"Continue\",\n    101: \"Switching Protocols\",\n    200: \"OK\",\n    201: \"Created\",\n    202: \"Accepted\",\n    203: \"Non-Authoritative Information\",\n    204: \"No Content\",\n    205: \"Reset Content\",\n    206: \"Partial Content\",\n    300: \"Multiple Choice\",\n    301: \"Moved Permanently\",\n    302: \"Found\",\n    303: \"See Other\",\n    304: \"Not Modified\",\n    305: \"Use Proxy\",\n    307: \"Temporary Redirect\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    402: \"Payment Required\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    407: \"Proxy Authentication Required\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    411: \"Length Required\",\n    412: \"Precondition Failed\",\n    413: \"Request Entity Too Large\",\n    414: \"Request-URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Requested Range Not Satisfiable\",\n    417: \"Expectation Failed\",\n    422: \"Unprocessable Entity\",\n    500: \"Internal Server Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Gateway Timeout\",\n    505: \"HTTP Version Not Supported\"\n};\n\nvar MOCKER_DATABASE_NAME = exports.MOCKER_DATABASE_NAME = \"MockerDatabase\";\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _constant = __webpack_require__(1);\n\nexports.default = {\n    timeout: _constant.MOCKERHTTPREQUEST_DELAY\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _Browser = __webpack_require__(10);\n\nvar _Browser2 = _interopRequireDefault(_Browser);\n\nvar _Data = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// 单例模式，因为视图仅出现一次\n\n/**\n * Created by mac on 17/2/4.\n */\n\nvar MockerBrowser = {\n    init: function init() {\n\n        var rootElement = document.createElement('div');\n        rootElement.className = 'mocker';\n        rootElement.innerHTML = _Browser2.default;\n\n        document.body.appendChild(rootElement);\n\n        // 初始化样式\n        this.setInitialStyle(rootElement);\n\n        // 激活工具面板\n        rootElement.querySelector('.mocker-switch-btn').onclick = this.switchStatus.bind(this, rootElement);\n\n        // 增加数据面板\n        rootElement.querySelector(\".mocker-table .add\").onclick = this.switchAdd.bind(this, rootElement);\n        // 查看数据列表\n        rootElement.querySelector(\".mocker-table .list\").onclick = this.switchList.bind(this, rootElement);\n        // 保存新的数据\n        rootElement.querySelector(\".mocker-table .save\").onclick = this.handleSave.bind(this, rootElement);\n    },\n    setInitialStyle: function setInitialStyle(rootElement) {\n        if (window.mocker.status === 0) {\n            rootElement.querySelector('.mocker-icon').classList.remove('opened');\n        } else if (window.mocker.status === 1) {\n            rootElement.querySelector('.mocker-icon').classList.add('opened');\n        }\n    },\n    switchStatus: function switchStatus(rootElement, event) {\n\n        if (window.mocker.status === 0) {\n            rootElement.querySelector('.mocker-icon').classList.add('opened');\n            window.mocker && window.mocker.open();\n        } else if (window.mocker.status === 1) {\n            rootElement.querySelector('.mocker-icon').classList.remove('opened');\n            window.mocker && window.mocker.close();\n        }\n    },\n    switchAdd: function switchAdd(rootElement, event) {\n        if (rootElement.querySelector(\".form-add\").style.display === 'block') {\n            rootElement.querySelector(\".form-add\").style.display = 'none';\n        } else {\n            rootElement.querySelector(\".form-add\").style.display = 'block';\n            rootElement.querySelector(\".list-panel\").style.display = 'none';\n        }\n    },\n    switchList: function switchList(rootElement) {\n        (0, _Data.getAllMockerRecord)().then(function (items) {\n            if (rootElement.querySelector(\".list-panel\").style.display === 'block') {\n                rootElement.querySelector(\".list-panel\").style.display = 'none';\n            } else {\n                rootElement.querySelector(\".form-add\").style.display = 'none';\n                rootElement.querySelector(\".list-panel\").style.display = 'block';\n\n                rootElement.querySelector('.mocker-list').innerHTML = items.map(function (ele, index, array) {\n                    return '<tr>\\n                                <td>' + ele.url + '</td>\\n                                <td>' + ele.method + '</td>\\n                                <td>' + ele.response + '</td>\\n                            </tr>';\n                });\n            }\n        });\n    },\n    handleSave: function handleSave(rootElement, event) {\n        event.preventDefault();\n\n        var formElement = rootElement.querySelector('.form-add');\n\n        console.log(formElement.querySelector(\"input[name=url]\").value);\n        mocker.mock({\n            url: formElement.querySelector(\"input[name=url]\").value,\n            method: formElement.querySelector(\"input[name=method]\").value,\n            response: formElement.querySelector(\"input[name=response]\").value\n        });\n    }\n\n};\nexports.default = MockerBrowser;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _MockerHttpRequest = __webpack_require__(7);\n\nObject.keys(_MockerHttpRequest).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _MockerHttpRequest[key];\n    }\n  });\n});\nexports.default = _MockerHttpRequest.MockerHttpRequest; /**\n                                                         * Created by mac on 17/1/20.\n                                                         */\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"Mocker\",\n\t\"version\": \"1.0.0\",\n\t\"description\": \"A mock data management tool\",\n\t\"main\": \"index.js\",\n\t\"scripts\": {\n\t\t\"dev\": \" NODE_ENV=development webpack-dev-server --hot  --config config/webpack.config.js\",\n\t\t\"build\": \"npm run clean && NODE_ENV=production webpack --config config/webpack.config.js\",\n\t\t\"clean\": \"rm -rf dist\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/PaulShi666/Mocker.git\"\n\t},\n\t\"keywords\": [\n\t\t\"mock\",\n\t\t\"Http\"\n\t],\n\t\"author\": \"Paul\",\n\t\"license\": \"ISC\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/PaulShi666/Mocker/issues\"\n\t},\n\t\"homepage\": \"https://github.com/PaulShi666/Mocker#readme\",\n\t\"devDependencies\": {\n\t\t\"babel-core\": \"^6.22.1\",\n\t\t\"babel-loader\": \"^6.2.10\",\n\t\t\"babel-preset-es2015\": \"^6.22.0\",\n\t\t\"css-loader\": \"^0.26.1\",\n\t\t\"file-loader\": \"^0.10.0\",\n\t\t\"html-loader\": \"^0.4.4\",\n\t\t\"html-webpack-plugin\": \"^2.26.0\",\n\t\t\"url-loader\": \"^0.5.7\",\n\t\t\"webpack\": \"^2.2.1\",\n\t\t\"webpack-dev-server\": \"^1.16.2\"\n\t}\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.updateMockerRecord = exports.deleteMockerRecord = exports.addMockerRecord = exports.getAllMockerRecord = exports.getMockerRecord = exports.createMockerDatabase = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _constant = __webpack_require__(1);\n\nvar db = void 0;\n\nfunction createMockerDatabase() {\n\n    //兼容性\n    var indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n    var IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || { READ_WRITE: \"readwrite\" };\n    var IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n\n    var request = window.indexedDB.open(_constant.MOCKER_DATABASE_NAME);\n    request.onerror = function () {\n        throw new Error(\"数据库创建失败\");\n    };\n\n    request.onsuccess = function (event) {\n        db = event.target.result;\n    };\n\n    request.onupgradeneeded = function (event) {\n        db = event.target.result;\n\n        // 创建表结构\n        var objectStore = db.createObjectStore(\"records\", {\n            keyPath: \"id\",\n            autoIncrement: true\n        });\n\n        objectStore.createIndex(\"methodUrl\", [\"method\", \"url\"], {\n            unique: true\n        });\n    };\n}\nfunction getMockerRecord(o) {\n    checkMockerRecord(o);\n\n    var objectStore = db.transaction(\"records\", \"readonly\").objectStore(\"records\");\n\n    return new Promise(function (resolve, reject) {\n        // 根据索引查询\n        objectStore.index('methodUrl').get([o.method, o.url]).onsuccess = function (e) {\n            resolve(e.target.result);\n        };\n    });\n}\nfunction getAllMockerRecord(o) {\n    var items = [];\n\n    var objectStore = db.transaction(\"records\", \"readonly\").objectStore(\"records\");\n\n    return new Promise(function (resolve, reject) {\n        // 使用游标查询所有的数据\n        objectStore.openCursor().onsuccess = function (event) {\n            var cursor = event.target.result;\n            if (cursor) {\n                items.push(cursor.value);\n                cursor.continue();\n            } else {\n                resolve(items);\n            }\n        };\n    });\n}\nfunction addMockerRecord(o) {\n\n    checkMockerRecord(o);\n\n    var objectStore = db.transaction(\"records\", \"readwrite\").objectStore(\"records\");\n    var request = objectStore.add({\n        \"method\": o.method,\n        \"url\": o.url,\n        \"response\": o.response\n    });\n    request.onsuccess = function () {};\n    request.onerror = function () {\n        throw new Error(\"Mocker数据库添加失败\");\n    };\n}\n\nfunction deleteMockerRecord(o) {}\n\nfunction updateMockerRecord(o) {}\n\nfunction checkMockerRecord(o) {\n    // 检测输入参数\n    if (!((typeof o === \"undefined\" ? \"undefined\" : _typeof(o)) === 'object' && typeof o.method === 'string' && typeof o.url === 'string' && /^(get|post)$/i.test(o.method))) {\n        throw new Error('数据库mock参数非法');\n    }\n}\n\nexports.createMockerDatabase = createMockerDatabase;\nexports.getMockerRecord = getMockerRecord;\nexports.getAllMockerRecord = getAllMockerRecord;\nexports.addMockerRecord = addMockerRecord;\nexports.deleteMockerRecord = deleteMockerRecord;\nexports.updateMockerRecord = updateMockerRecord;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.resetXMLHttpRequest = exports.replaceXMLHttpRequest = exports.MockerHttpRequest = undefined;\n\nvar _util = __webpack_require__(9);\n\nvar _constant = __webpack_require__(1);\n\nvar _config = __webpack_require__(2);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _Data = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//保存原生XMLHttpRequest\n/**\n * Created by mac on 17/1/20.\n */\n\nvar _XMLHttpRequest = window.XMLHttpRequest;\n//保存原生ActiveXObject\nvar _ActiveXObject = window.ActiveXObject;\n\n// 修改原生的XMLHttpRequest\nfunction replaceXMLHttpRequest() {\n    if (window.XMLHttpRequest) {\n        window.XMLHttpRequest = MockerHttpRequest;\n    }\n    if (window.mocker) {\n        window.mocker.status = 1;\n    }\n}\n// 恢复原生的XMLHttpRequest\nfunction resetXMLHttpRequest() {\n    window.XMLHttpRequest = _XMLHttpRequest;\n    window.ActiveXObject = _ActiveXObject;\n    if (window.mocker) {\n        window.mocker.status = 0;\n    }\n}\n\n//自定义XHR对象构造器\nfunction MockerHttpRequest() {\n\n    Object.defineProperties(this, {\n        _xmlHttpRequest: {\n            writable: false,\n            enumerable: false,\n            configurable: false\n        },\n        _listeners: {\n            value: {}\n        },\n        _requestHeader: {\n            value: {}\n\n        },\n        config: {\n            value: {\n                timeout: _config2.default.timeout,\n                // 数据库mock记录（延迟对象）\n                record: null\n            }\n        },\n        onerror: {\n            value: null\n        },\n        onload: {\n            value: null\n        },\n        onloadend: {\n            value: null\n        },\n        onloadstart: {\n            value: null\n        },\n        onprogress: {\n            value: null\n\n        },\n        onreadystatechange: {\n            value: null\n        },\n        ontimeout: {\n            value: null\n        },\n        readyState: {\n            value: 0,\n            writable: true\n        },\n        response: {\n            value: '',\n            writable: true\n        },\n        responseText: {\n            value: '',\n            writable: true\n        },\n        responseType: {\n            value: ''\n        },\n        responseURL: {\n            value: ''\n        },\n        responseXML: {\n            value: null\n        },\n        status: {\n            value: 0,\n            writable: true\n        },\n        statusText: {\n            value: \"\",\n            writable: true\n\n        },\n        timeout: {\n            value: 0\n\n        }\n    });\n}\n\nvar MockerHttpRequestPrototype = {\n    constructor: {\n        value: MockerHttpRequest,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    DONE: { value: 4 },\n    HEADERS_RECEIVED: { value: 2 },\n    LOADING: { value: 3 },\n    OPENED: { value: 1 },\n    UNSENT: { value: 0 },\n    abort: {\n        value: function value() {\n            this.readyState = MockerHttpRequestPrototype.UNSENT.value;\n            this.dispatchEvent(new Event(_constant.XHR_EVENTS.ABORT));\n            this.dispatchEvent(new Event(_constant.XHR_EVENTS.ERROR));\n        }\n    },\n    getAllResponseHeaders: {\n        value: function value() {}\n    },\n    getResponseHeader: {\n        value: function value() {}\n    },\n    onabort: {},\n    onerror: {},\n    onload: {},\n    onloadend: {},\n    onloadstart: {},\n    onprogress: {},\n    onreadystatechange: {},\n    ontimeout: {},\n    open: {\n        //推荐不要用箭头函数,词法作用域错误\n        value: function value(method, url, async, username, password) {\n\n            // 序列化请求\n            this.config.open = {\n                method: method,\n                url: url,\n                async: typeof async === 'boolean' ? async : true,\n                username: username,\n                password: password\n            };\n\n            var that = this;\n\n            //在Mock Indexdb记录中查询\n            this.config.record = find({ method: method, url: url }).then(function (item) {\n\n                if (!item) {\n                    //在Mock记录中没有查询到\n\n\n                } else {\n                    //在Mock记录中查询到\n\n                    that.readyState = MockerHttpRequestPrototype.OPENED.value;\n                    that.dispatchEvent(new Event(_constant.XHR_EVENTS.READYSTATECHANGE));\n                }\n                return item;\n            });\n        }\n    },\n    overrideMimeType: {\n        value: function value() {}\n    },\n    readyState: {},\n    response: {},\n    responseText: {},\n    responseType: {},\n    responseURL: {},\n    responseXML: {},\n    send: {\n        value: function value(data) {\n\n            // 序列化请求\n\n            var that = this;\n\n            this.config.record.then(function (item) {\n                //已经在open 时使用Mock Indexdb记录中查询\n\n                if (!item) {\n                    //在Mock记录中没有查询到\n                } else {\n                    //在Mock记录中查询到\n                    that.response = that.responseText = item.response;\n\n                    that.setRequestHeader('X-Requested-With', 'MockXMLHttpRequest');\n                    that.dispatchEvent(new Event(_constant.XHR_EVENTS.LOADSTART));\n\n                    //使用settimeout模拟异步\n                    if (that.config.open.async === true) {\n                        window.setTimeout(done.bind(that), that.config.timeout);\n                    } else {\n                        done.call(that);\n                    }\n                }\n            });\n\n            function done() {\n                this.readyState = MockerHttpRequestPrototype.HEADERS_RECEIVED.value;\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.READYSTATECHANGE));\n\n                this.readyState = MockerHttpRequestPrototype.LOADING.value;\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.READYSTATECHANGE));\n\n                this.status = 200;\n\n                this.statusText = _constant.HTTP_STATUS_CODES[200];\n\n                this.readyState = MockerHttpRequestPrototype.DONE.value;\n\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.READYSTATECHANGE));\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.LOAD));\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.LOADEND));\n            }\n        }\n    },\n    setRequestHeader: {\n        value: function value(key, _value) {\n            if (key in this._requestHeader) {\n                this._requestHeader[key] = ',' + _value;\n            } else {\n                this._requestHeader[key] = _value;\n            }\n        }\n    },\n    status: {},\n    statusText: {},\n    timeout: {},\n    upload: {}\n};\n\nfunction MockXMLHttpRequestEventTarget() {}\n\nvar MockXMLHttpRequestEventTargetPrototype = {\n    constructor: {\n        value: MockXMLHttpRequestEventTarget,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    onabort: {},\n    onerror: {},\n    onload: {},\n    onloadend: {},\n    onloadstart: {},\n    onprogress: {},\n    ontimeout: {}\n};\nfunction MockEventTarget() {}\nvar MockEventTargetPrototype = {\n    constructor: {\n        value: MockEventTarget,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    addEventListener: {\n        value: function value(type, callback) {\n            // type = 'on' + type;\n\n            if (!(type in this._listeners)) {\n                this._listeners[type] = [];\n            }\n\n            this._listeners[type].push(callback);\n\n            // 把回调函数返回，方便移除\n            return callback;\n        }\n    },\n    dispatchEvent: {\n        value: function value(event) {\n            if (!(event.type in this._listeners)) {\n                return;\n            }\n\n            var stack = this._listeners[event.type];\n\n            if ((0, _util.getVariableType)(stack) !== 'Array') {\n                return;\n            }\n            // 事件目标改写\n            // event.target = this;\n\n            for (var i = 0; i < stack.length; i++) {\n                stack[i].call(this, event);\n            }\n        }\n    },\n    removeEventListener: {\n        value: function value(type, callback) {\n            if (!(type in this._listeners)) {\n                return;\n            }\n\n            var stack = this._listeners[type];\n\n            if ((0, _util.getVariableType)(stack) !== 'Array') {\n                return;\n            }\n\n            for (var i = 0; i < stack.length; i++) {\n                if (stack[i] === callback) {\n                    stack[i].splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    }\n};\nfunction find(o) {\n    return (0, _Data.getMockerRecord)(o);\n}\n\n//MockerHttpRequest原型链模拟\nMockerHttpRequest.prototype = (0, _util.createPrototypeChain)(MockerHttpRequestPrototype, MockXMLHttpRequestEventTargetPrototype, MockEventTargetPrototype);\n\nexports.MockerHttpRequest = MockerHttpRequest;\nexports.replaceXMLHttpRequest = replaceXMLHttpRequest;\nexports.resetXMLHttpRequest = resetXMLHttpRequest;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Created by mac on 17/1/20.\n */\n\n//使用Object.create建立原型链继承关系\nfunction createPrototypeChain() {\n    // console.log(arguments);\n    if (_typeof(arguments[0]) !== 'object') {\n        console.error('原型链属性为对象类型');\n        return;\n    }\n\n    if (arguments.length === 1) {\n        return Object.create(Object.prototype, arguments[0]);\n    } else {\n        return Object.create(createPrototypeChain.apply(null, Array.prototype.slice.call(arguments, 1)), arguments[0]);\n    }\n}\n\n// 获取精确类型\nfunction getVariableType(o) {\n    return Object.prototype.toString.call(o).slice(8, -1);\n}\n\nexports.createPrototypeChain = createPrototypeChain;\nexports.getVariableType = getVariableType;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Util = __webpack_require__(8);\n\nObject.keys(_Util).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Util[key];\n    }\n  });\n});\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<style>\\n    .mocker {\\n\\n    }\\n\\n    .mocker .mocker-container {\\n        border-radius: 10px;\\n        position: fixed;\\n        background: #F0F0F0;\\n        right: 10px;\\n        top: 10px;\\n        text-align: center;\\n        padding: 5px;\\n    }\\n\\n    .mocker .mocker-icon {\\n        fill: #334ff9;\\n    }\\n\\n    .mocker .mocker-icon.opened {\\n        fill: #fd0000;\\n    }\\n\\n    .mocker .mocker-switch-btn {\\n        border: none;\\n        background: transparent;\\n\\n        padding: 5px 10px;\\n        margin: 0;\\n        outline: none;\\n    }\\n\\n    .mocker .mocker-table {\\n\\n    }\\n\\n</style>\\n<script>\\n\\n</script>\\n<div class=\\\"mocker-container\\\">\\n    <button class=\\\"mocker-switch-btn\\\">\\n        <svg class=\\\"mocker-icon\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n             xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\">\\n            <path d=\\\"M22 2l-10 10h-6l-6 8c0 0 6.357-1.77 10.065-0.94l-10.065 12.94 13.184-10.255c1.839 4.208-1.184 10.255-1.184 10.255l8-6v-6l10-10 2-10-10 2z\\\"></path>\\n        </svg>\\n    </button>\\n    <div class=\\\"mocker-table\\\">\\n\\n        <button class=\\\"add\\\">增加</button>\\n        <button class=\\\"list\\\">数据</button>\\n\\n        <form style=\\\"display: none\\\" action=\\\"\\\" class=\\\"form-add\\\">\\n            <p>\\n                <label>\\n                    <input placeholder=\\\"请求路径\\\" type=\\\"text\\\" name=\\\"url\\\"/>\\n                </label>\\n            </p>\\n            <p>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"method\\\" value=\\\"GET\\\">GET\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"method\\\" value=\\\"POST\\\">POST\\n                </label>\\n            </p>\\n\\n            <p>\\n                <input placeholder=\\\"响应数据\\\" name=\\\"response\\\" type=\\\"text\\\">\\n            </p>\\n\\n            <button class=\\\"save\\\">保存</button>\\n        </form>\\n\\n        <table style=\\\"display: none\\\" class=\\\"list-panel\\\">\\n            <thead>\\n            <tr>\\n                <td>请求路径</td>\\n                <td>请求方式</td>\\n                <td>响应数据</td>\\n            </tr>\\n            </thead>\\n            <tbody class=\\\"mocker-list\\\">\\n\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\";\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _package = __webpack_require__(5);\n\nvar npmPackage = _interopRequireWildcard(_package);\n\nvar _config = __webpack_require__(2);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _Data = __webpack_require__(0);\n\nvar _MockerHttpRequest = __webpack_require__(4);\n\nvar _Browser = __webpack_require__(3);\n\nvar _Browser2 = _interopRequireDefault(_Browser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// 初始化Mocker\nvar mocker = {\n    open: _MockerHttpRequest.replaceXMLHttpRequest,\n    close: _MockerHttpRequest.resetXMLHttpRequest,\n    status: 0,\n    config: _config2.default,\n    version: npmPackage.version,\n    mock: function mock() {\n        _Data.addMockerRecord.apply(this, arguments);\n    }\n};\n\n// 给window对象增加mocker接口\n/**\n * Created by mac on 17/1/17.\n */\n\nif (!window.mocker || window.mocker.version !== mocker.version) {\n    window.mocker = mocker;\n}\n\n//初始化Mocker对应数据库\ntry {\n    (0, _Data.createMockerDatabase)();\n} catch (e) {\n    console.log('初始化Mocker数据库失败', e);\n}\n\n// 初始化MockerBrowser\ntry {\n    _Browser2.default.init();\n} catch (e) {\n    console.log('初始化MockerGui失败', e);\n}\n\nexports.default = mocker;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// mocker-min.1.0.0.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dc5d8b213284a426b62a","/**\n * Created by mac on 17/1/24.\n */\n\nexport * from './Database';\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/Data/index.js","/**\n * Created by mac on 17/1/20.\n */\n// MockerHttpRequest\n\n// 默认mock延迟时间\nexport const MOCKERHTTPREQUEST_DELAY = 0;\n// 默认是否匹配到mock记录\n\nexport const XHR_EVENTS = {\n    READYSTATECHANGE: \"readystatechange\",\n    LOADSTART: \"loadstart\",\n    PROGRESS: \"progress\",\n    ABORT: \"abort\",\n    ERROR: \"error\",\n    LOAD: \"load\",\n    TIMEOUT: \"timeout\",\n    LOADEND: \"loadend\"\n};\n\nexport const HTTP_STATUS_CODES = {\n    100: \"Continue\",\n    101: \"Switching Protocols\",\n    200: \"OK\",\n    201: \"Created\",\n    202: \"Accepted\",\n    203: \"Non-Authoritative Information\",\n    204: \"No Content\",\n    205: \"Reset Content\",\n    206: \"Partial Content\",\n    300: \"Multiple Choice\",\n    301: \"Moved Permanently\",\n    302: \"Found\",\n    303: \"See Other\",\n    304: \"Not Modified\",\n    305: \"Use Proxy\",\n    307: \"Temporary Redirect\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    402: \"Payment Required\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    407: \"Proxy Authentication Required\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    411: \"Length Required\",\n    412: \"Precondition Failed\",\n    413: \"Request Entity Too Large\",\n    414: \"Request-URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Requested Range Not Satisfiable\",\n    417: \"Expectation Failed\",\n    422: \"Unprocessable Entity\",\n    500: \"Internal Server Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Gateway Timeout\",\n    505: \"HTTP Version Not Supported\"\n};\n\nexport const MOCKER_DATABASE_NAME = \"MockerDatabase\";\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/constant.js","import {\n    MOCKERHTTPREQUEST_DELAY,\n} from './constant';\n\nexport default {\n        timeout:MOCKERHTTPREQUEST_DELAY,\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/config.js","/**\n * Created by mac on 17/2/4.\n */\n\nimport browserHtml from './Browser.html';\nimport {getAllMockerRecord} from '../Data';\n\n// 单例模式，因为视图仅出现一次\n\nlet MockerBrowser = {\n    init: function () {\n\n        let rootElement = document.createElement('div');\n        rootElement.className = 'mocker';\n        rootElement.innerHTML = browserHtml;\n\n        document.body.appendChild(rootElement);\n\n        // 初始化样式\n        this.setInitialStyle(rootElement);\n\n        // 激活工具面板\n        rootElement.querySelector('.mocker-switch-btn').onclick = this.switchStatus.bind(this, rootElement);\n\n        // 增加数据面板\n        rootElement.querySelector(\".mocker-table .add\").onclick = this.switchAdd.bind(this, rootElement);\n        // 查看数据列表\n        rootElement.querySelector(\".mocker-table .list\").onclick = this.switchList.bind(this, rootElement);\n        // 保存新的数据\n        rootElement.querySelector(\".mocker-table .save\").onclick = this.handleSave.bind(this, rootElement);\n    },\n    setInitialStyle: function (rootElement) {\n        if(window.mocker.status===0){\n            rootElement.querySelector('.mocker-icon').classList.remove('opened');\n\n        }else if(window.mocker.status ===1){\n            rootElement.querySelector('.mocker-icon').classList.add('opened');\n        }\n\n    },\n    switchStatus: function (rootElement, event) {\n\n        if(window.mocker.status===0){\n            rootElement.querySelector('.mocker-icon').classList.add('opened');\n            window.mocker && window.mocker.open();\n\n        }else if(window.mocker.status ===1){\n            rootElement.querySelector('.mocker-icon').classList.remove('opened');\n            window.mocker && window.mocker.close();\n        }\n\n    },\n    switchAdd: function (rootElement, event) {\n        if(rootElement.querySelector(\".form-add\").style.display === 'block'){\n            rootElement.querySelector(\".form-add\").style.display = 'none';\n        }else{\n            rootElement.querySelector(\".form-add\").style.display = 'block';\n            rootElement.querySelector(\".list-panel\").style.display = 'none';\n        }\n\n    },\n    switchList: function (rootElement) {\n        getAllMockerRecord().then(function (items) {\n            if(rootElement.querySelector(\".list-panel\").style.display === 'block'){\n                rootElement.querySelector(\".list-panel\").style.display = 'none';\n            }else{\n                rootElement.querySelector(\".form-add\").style.display = 'none';\n                rootElement.querySelector(\".list-panel\").style.display = 'block';\n\n                rootElement.querySelector('.mocker-list').innerHTML = items.map(function (ele, index, array) {\n                    return `<tr>\n                                <td>${ele.url}</td>\n                                <td>${ele.method}</td>\n                                <td>${ele.response}</td>\n                            </tr>`\n                });\n            }\n        });\n    },\n    handleSave: function (rootElement, event) {\n        event.preventDefault();\n\n        let formElement = rootElement.querySelector('.form-add');\n\n        console.log(formElement.querySelector(\"input[name=url]\").value);\n        mocker.mock({\n            url: formElement.querySelector(\"input[name=url]\").value,\n            method: formElement.querySelector(\"input[name=method]\").value,\n            response: formElement.querySelector(\"input[name=response]\").value\n        })\n    }\n\n};\nexport default MockerBrowser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/Gui/Browser.js","/**\n * Created by mac on 17/1/20.\n */\nimport {MockerHttpRequest} from './MockerHttpRequest';\n\nexport default MockerHttpRequest;\nexport * from './MockerHttpRequest';\n\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/MockerHttpRequest/index.js","module.exports = {\n\t\"name\": \"Mocker\",\n\t\"version\": \"1.0.0\",\n\t\"description\": \"A mock data management tool\",\n\t\"main\": \"index.js\",\n\t\"scripts\": {\n\t\t\"dev\": \" NODE_ENV=development webpack-dev-server --hot  --config config/webpack.config.js\",\n\t\t\"build\": \"npm run clean && NODE_ENV=production webpack --config config/webpack.config.js\",\n\t\t\"clean\": \"rm -rf dist\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/PaulShi666/Mocker.git\"\n\t},\n\t\"keywords\": [\n\t\t\"mock\",\n\t\t\"Http\"\n\t],\n\t\"author\": \"Paul\",\n\t\"license\": \"ISC\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/PaulShi666/Mocker/issues\"\n\t},\n\t\"homepage\": \"https://github.com/PaulShi666/Mocker#readme\",\n\t\"devDependencies\": {\n\t\t\"babel-core\": \"^6.22.1\",\n\t\t\"babel-loader\": \"^6.2.10\",\n\t\t\"babel-preset-es2015\": \"^6.22.0\",\n\t\t\"css-loader\": \"^0.26.1\",\n\t\t\"file-loader\": \"^0.10.0\",\n\t\t\"html-loader\": \"^0.4.4\",\n\t\t\"html-webpack-plugin\": \"^2.26.0\",\n\t\t\"url-loader\": \"^0.5.7\",\n\t\t\"webpack\": \"^2.2.1\",\n\t\t\"webpack-dev-server\": \"^1.16.2\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 5\n// module chunks = 0 1","import {MOCKER_DATABASE_NAME} from '../constant';\n\nlet db;\n\nfunction createMockerDatabase() {\n\n    //兼容性\n    let indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n    let IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || {READ_WRITE: \"readwrite\"};\n    let IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n\n    let request = window.indexedDB.open(MOCKER_DATABASE_NAME);\n    request.onerror = function () {\n        throw new Error(\"数据库创建失败\")\n    };\n\n    request.onsuccess = function (event) {\n        db = event.target.result;\n    };\n\n    request.onupgradeneeded = function (event) {\n        db = event.target.result;\n\n        // 创建表结构\n        let objectStore = db.createObjectStore(\"records\", {\n            keyPath: \"id\",\n            autoIncrement: true\n        });\n\n        objectStore.createIndex(\"methodUrl\", [\"method\", \"url\"], {\n            unique: true\n        });\n\n    }\n\n\n}\nfunction getMockerRecord(o) {\n    checkMockerRecord(o);\n\n    let objectStore = db.transaction(\"records\", \"readonly\").objectStore(\"records\");\n\n    return new Promise(function (resolve, reject) {\n        // 根据索引查询\n        objectStore.index('methodUrl').get([o.method, o.url]).onsuccess = function (e) {\n            resolve(e.target.result);\n        }\n    });\n\n\n}\nfunction getAllMockerRecord(o) {\n    let items = [];\n\n    let objectStore = db.transaction(\"records\", \"readonly\").objectStore(\"records\");\n\n    return new Promise(function (resolve, reject) {\n        // 使用游标查询所有的数据\n        objectStore.openCursor().onsuccess = function (event) {\n            let cursor = event.target.result;\n            if (cursor) {\n                items.push(cursor.value);\n                cursor.continue();\n            }else{\n                resolve(items);\n            }\n\n        };\n    });\n}\nfunction addMockerRecord(o) {\n\n    checkMockerRecord(o);\n\n    let objectStore = db.transaction(\"records\", \"readwrite\").objectStore(\"records\");\n    let request = objectStore.add({\n        \"method\": o.method,\n        \"url\": o.url,\n        \"response\": o.response\n    });\n    request.onsuccess = function () {\n\n    };\n    request.onerror = function () {\n        throw new Error(\"Mocker数据库添加失败\");\n    }\n\n}\n\nfunction deleteMockerRecord(o) {\n\n}\n\nfunction updateMockerRecord(o) {\n\n}\n\nfunction checkMockerRecord(o) {\n    // 检测输入参数\n    if (!(typeof o === 'object' &&\n        typeof o.method === 'string' &&\n        typeof o.url === 'string' &&\n        /^(get|post)$/i.test(o.method))\n    ) {\n        throw new Error('数据库mock参数非法')\n    }\n}\n\nexport {\n    createMockerDatabase,\n    getMockerRecord,\n    getAllMockerRecord,\n    addMockerRecord,\n    deleteMockerRecord,\n    updateMockerRecord\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/Data/Database.js","/**\n * Created by mac on 17/1/20.\n */\n\nimport {createPrototypeChain, getVariableType} from '../util';\nimport {XHR_EVENTS, HTTP_STATUS_CODES} from '../constant';\nimport mockerConfig from '../config';\nimport {getMockerRecord} from '../Data';\n\n//保存原生XMLHttpRequest\nconst _XMLHttpRequest = window.XMLHttpRequest;\n//保存原生ActiveXObject\nconst _ActiveXObject = window.ActiveXObject;\n\n// 修改原生的XMLHttpRequest\nfunction replaceXMLHttpRequest() {\n    if (window.XMLHttpRequest) {\n        window.XMLHttpRequest = MockerHttpRequest;\n    }\n    if(window.mocker){\n        window.mocker.status = 1;\n    }\n}\n// 恢复原生的XMLHttpRequest\nfunction resetXMLHttpRequest() {\n    window.XMLHttpRequest = _XMLHttpRequest;\n    window.ActiveXObject = _ActiveXObject;\n    if(window.mocker){\n        window.mocker.status = 0;\n    }\n}\n\n\n//自定义XHR对象构造器\nfunction MockerHttpRequest() {\n\n    Object.defineProperties(this, {\n        _xmlHttpRequest: {\n            writable: false,\n            enumerable: false,\n            configurable: false\n        },\n        _listeners: {\n            value: {}\n        },\n        _requestHeader: {\n            value: {}\n\n        },\n        config: {\n            value: {\n                timeout: mockerConfig.timeout,\n                // 数据库mock记录（延迟对象）\n                record: null\n            }\n        },\n        onerror: {\n            value: null\n        },\n        onload: {\n            value: null\n        },\n        onloadend: {\n            value: null\n        },\n        onloadstart: {\n            value: null\n        },\n        onprogress: {\n            value: null\n\n        },\n        onreadystatechange: {\n            value: null\n        },\n        ontimeout: {\n            value: null\n        },\n        readyState: {\n            value: 0,\n            writable: true\n        },\n        response: {\n            value: '',\n            writable: true\n        },\n        responseText: {\n            value: '',\n            writable: true\n        },\n        responseType: {\n            value: ''\n        },\n        responseURL: {\n            value: ''\n        },\n        responseXML: {\n            value: null\n        },\n        status: {\n            value: 0,\n            writable: true\n        },\n        statusText: {\n            value: \"\",\n            writable: true\n\n        },\n        timeout: {\n            value: 0\n\n        }\n    });\n\n}\n\nlet MockerHttpRequestPrototype = {\n    constructor: {\n        value: MockerHttpRequest,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    DONE: {value: 4},\n    HEADERS_RECEIVED: {value: 2},\n    LOADING: {value: 3},\n    OPENED: {value: 1},\n    UNSENT: {value: 0},\n    abort: {\n        value: function () {\n            this.readyState = MockerHttpRequestPrototype.UNSENT.value;\n            this.dispatchEvent(new Event(XHR_EVENTS.ABORT));\n            this.dispatchEvent(new Event(XHR_EVENTS.ERROR));\n        }\n    },\n    getAllResponseHeaders: {\n        value: () => {\n        }\n    },\n    getResponseHeader: {\n        value: () => {\n        }\n    },\n    onabort: {},\n    onerror: {},\n    onload: {},\n    onloadend: {},\n    onloadstart: {},\n    onprogress: {},\n    onreadystatechange: {},\n    ontimeout: {},\n    open: {\n        //推荐不要用箭头函数,词法作用域错误\n        value: function (method, url, async, username, password) {\n\n\n            // 序列化请求\n            this.config.open = {\n                method: method,\n                url: url,\n                async: typeof async === 'boolean' ? async : true,\n                username: username,\n                password: password\n            };\n\n            let that = this;\n\n            //在Mock Indexdb记录中查询\n            this.config.record = find({method: method, url: url})\n                .then(function (item) {\n\n                    if (!item) {\n                        //在Mock记录中没有查询到\n\n\n                    } else {\n                        //在Mock记录中查询到\n\n                        that.readyState = MockerHttpRequestPrototype.OPENED.value;\n                        that.dispatchEvent(new Event(XHR_EVENTS.READYSTATECHANGE));\n                    }\n                    return item;\n                });\n\n\n        }\n    },\n    overrideMimeType: {\n        value: function () {\n        }\n    },\n    readyState: {},\n    response: {},\n    responseText: {},\n    responseType: {},\n    responseURL: {},\n    responseXML: {},\n    send: {\n        value: function (data) {\n\n\n            // 序列化请求\n\n            let that = this;\n\n            this.config.record.then(function (item) {\n                //已经在open 时使用Mock Indexdb记录中查询\n\n                if (!item) {\n                    //在Mock记录中没有查询到\n                } else {\n                    //在Mock记录中查询到\n                    that.response = that.responseText = item.response;\n\n                    that.setRequestHeader('X-Requested-With', 'MockXMLHttpRequest');\n                    that.dispatchEvent(new Event(XHR_EVENTS.LOADSTART));\n\n                    //使用settimeout模拟异步\n                    if (that.config.open.async === true) {\n                        window.setTimeout(done.bind(that), that.config.timeout);\n                    } else {\n                        done.call(that);\n                    }\n\n                }\n\n            });\n\n\n            function done() {\n                this.readyState = MockerHttpRequestPrototype.HEADERS_RECEIVED.value;\n                this.dispatchEvent(new Event(XHR_EVENTS.READYSTATECHANGE));\n\n                this.readyState = MockerHttpRequestPrototype.LOADING.value;\n                this.dispatchEvent(new Event(XHR_EVENTS.READYSTATECHANGE));\n\n                this.status = 200;\n\n                this.statusText = HTTP_STATUS_CODES[200];\n\n                this.readyState = MockerHttpRequestPrototype.DONE.value;\n\n                this.dispatchEvent(new Event(XHR_EVENTS.READYSTATECHANGE));\n                this.dispatchEvent(new Event(XHR_EVENTS.LOAD));\n                this.dispatchEvent(new Event(XHR_EVENTS.LOADEND));\n\n            }\n\n\n        }\n    },\n    setRequestHeader: {\n        value: function (key, value) {\n            if (key in this._requestHeader) {\n                this._requestHeader[key] = ',' + value;\n            } else {\n                this._requestHeader[key] = value;\n            }\n        }\n    },\n    status: {},\n    statusText: {},\n    timeout: {},\n    upload: {}\n};\n\nfunction MockXMLHttpRequestEventTarget() {\n}\n\nlet MockXMLHttpRequestEventTargetPrototype = {\n    constructor: {\n        value: MockXMLHttpRequestEventTarget,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    onabort: {},\n    onerror: {},\n    onload: {},\n    onloadend: {},\n    onloadstart: {},\n    onprogress: {},\n    ontimeout: {},\n};\nfunction MockEventTarget() {\n\n}\nlet MockEventTargetPrototype = {\n    constructor: {\n        value: MockEventTarget,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    addEventListener: {\n        value: function (type, callback) {\n            // type = 'on' + type;\n\n            if (!(type in this._listeners)) {\n                this._listeners[type] = []\n            }\n\n            this._listeners[type].push(callback);\n\n            // 把回调函数返回，方便移除\n            return callback;\n        }\n    },\n    dispatchEvent: {\n        value: function (event) {\n            if (!(event.type in this._listeners)) {\n                return;\n            }\n\n            let stack = this._listeners[event.type];\n\n            if (getVariableType(stack) !== 'Array') {\n                return;\n            }\n            // 事件目标改写\n            // event.target = this;\n\n            for (let i = 0; i < stack.length; i++) {\n                stack[i].call(this, event);\n            }\n        }\n    },\n    removeEventListener: {\n        value: function (type, callback) {\n            if (!(type in this._listeners)) {\n                return;\n            }\n\n            let stack = this._listeners[type];\n\n            if (getVariableType(stack) !== 'Array') {\n                return;\n            }\n\n            for (let i = 0; i < stack.length; i++) {\n                if (stack[i] === callback\n                ) {\n                    stack[i].splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    }\n};\nfunction find(o) {\n    return getMockerRecord(o);\n}\n\n//MockerHttpRequest原型链模拟\nMockerHttpRequest.prototype = createPrototypeChain(\n    MockerHttpRequestPrototype,\n    MockXMLHttpRequestEventTargetPrototype,\n    MockEventTargetPrototype\n);\n\n\nexport {MockerHttpRequest, replaceXMLHttpRequest, resetXMLHttpRequest};\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/MockerHttpRequest/MockerHttpRequest.js","/**\n * Created by mac on 17/1/20.\n */\n\n//使用Object.create建立原型链继承关系\nfunction createPrototypeChain() {\n    // console.log(arguments);\n    if (typeof arguments[0] !== 'object') {\n        console.error('原型链属性为对象类型');\n        return;\n    }\n\n    if (arguments.length === 1) {\n        return Object.create(Object.prototype, arguments[0]);\n    } else {\n        return Object.create(\n            createPrototypeChain.apply(null, Array.prototype.slice.call(arguments, 1)),\n            arguments[0]\n        );\n    }\n}\n\n// 获取精确类型\nfunction getVariableType(o) {\n    return Object.prototype.toString.call(o).slice(8, -1);\n}\n\nexport {createPrototypeChain, getVariableType}\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/util/Util.js","/**\n * Created by mac on 17/1/20.\n */\nexport * from './Util'\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/util/index.js","module.exports = \"<style>\\n    .mocker {\\n\\n    }\\n\\n    .mocker .mocker-container {\\n        border-radius: 10px;\\n        position: fixed;\\n        background: #F0F0F0;\\n        right: 10px;\\n        top: 10px;\\n        text-align: center;\\n        padding: 5px;\\n    }\\n\\n    .mocker .mocker-icon {\\n        fill: #334ff9;\\n    }\\n\\n    .mocker .mocker-icon.opened {\\n        fill: #fd0000;\\n    }\\n\\n    .mocker .mocker-switch-btn {\\n        border: none;\\n        background: transparent;\\n\\n        padding: 5px 10px;\\n        margin: 0;\\n        outline: none;\\n    }\\n\\n    .mocker .mocker-table {\\n\\n    }\\n\\n</style>\\n<script>\\n\\n</script>\\n<div class=\\\"mocker-container\\\">\\n    <button class=\\\"mocker-switch-btn\\\">\\n        <svg class=\\\"mocker-icon\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n             xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"32\\\" height=\\\"32\\\" viewBox=\\\"0 0 32 32\\\">\\n            <path d=\\\"M22 2l-10 10h-6l-6 8c0 0 6.357-1.77 10.065-0.94l-10.065 12.94 13.184-10.255c1.839 4.208-1.184 10.255-1.184 10.255l8-6v-6l10-10 2-10-10 2z\\\"></path>\\n        </svg>\\n    </button>\\n    <div class=\\\"mocker-table\\\">\\n\\n        <button class=\\\"add\\\">增加</button>\\n        <button class=\\\"list\\\">数据</button>\\n\\n        <form style=\\\"display: none\\\" action=\\\"\\\" class=\\\"form-add\\\">\\n            <p>\\n                <label>\\n                    <input placeholder=\\\"请求路径\\\" type=\\\"text\\\" name=\\\"url\\\"/>\\n                </label>\\n            </p>\\n            <p>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"method\\\" value=\\\"GET\\\">GET\\n                </label>\\n                <label>\\n                    <input type=\\\"radio\\\" name=\\\"method\\\" value=\\\"POST\\\">POST\\n                </label>\\n            </p>\\n\\n            <p>\\n                <input placeholder=\\\"响应数据\\\" name=\\\"response\\\" type=\\\"text\\\">\\n            </p>\\n\\n            <button class=\\\"save\\\">保存</button>\\n        </form>\\n\\n        <table style=\\\"display: none\\\" class=\\\"list-panel\\\">\\n            <thead>\\n            <tr>\\n                <td>请求路径</td>\\n                <td>请求方式</td>\\n                <td>响应数据</td>\\n            </tr>\\n            </thead>\\n            <tbody class=\\\"mocker-list\\\">\\n\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/mocker/Gui/Browser.html\n// module id = 10\n// module chunks = 0 1","/**\n * Created by mac on 17/1/17.\n */\n\nimport * as npmPackage from '../../package.json';\nimport mockerConfig from './config';\n\nimport {createMockerDatabase, addMockerRecord} from './Data';\nimport {\n    MockerHttpRequest,\n    replaceXMLHttpRequest,\n    resetXMLHttpRequest,\n} from './MockerHttpRequest';\nimport  MockerBrowser from './Gui/Browser';\n\n// 初始化Mocker\nconst mocker = {\n    open:replaceXMLHttpRequest,\n    close: resetXMLHttpRequest,\n    status:0,\n    config: mockerConfig,\n    version: npmPackage.version,\n    mock: function () {\n        addMockerRecord.apply(this, arguments);\n    }\n};\n\n\n// 给window对象增加mocker接口\nif (!window.mocker || window.mocker.version !== mocker.version) {\n    window.mocker = mocker;\n}\n\n//初始化Mocker对应数据库\ntry {\n    createMockerDatabase();\n} catch (e) {\n    console.log('初始化Mocker数据库失败',e);\n}\n\n// 初始化MockerBrowser\ntry {\n    MockerBrowser.init();\n} catch (e) {\n    console.log('初始化MockerGui失败',e);\n}\n\n\n\nexport default mocker\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/index.js"],"sourceRoot":""}