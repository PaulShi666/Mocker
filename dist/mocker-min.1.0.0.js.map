{"version":3,"sources":["webpack:///mocker-min.1.0.0.js","webpack:///webpack/bootstrap 4f934ed6450b17d11833","webpack:///./src/mocker/constant.js","webpack:///./src/mocker/Data/index.js","webpack:///./src/mocker/config.js","webpack:///./src/mocker/MockerHttpRequest/index.js","webpack:///./package.json","webpack:///./src/mocker/Data/Database.js","webpack:///./src/mocker/MockerHttpRequest/MockerHttpRequest.js","webpack:///./src/mocker/util/Util.js","webpack:///./src/mocker/util/index.js","webpack:///./src/mocker/index.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","MOCKERHTTPREQUEST_DELAY","XHR_EVENTS","READYSTATECHANGE","LOADSTART","PROGRESS","ABORT","ERROR","LOAD","TIMEOUT","LOADEND","HTTP_STATUS_CODES","100","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","422","500","501","502","503","504","505","MOCKER_DATABASE_NAME","_Database","keys","forEach","key","_constant","default","timeout","_MockerHttpRequest","MockerHttpRequest","version","description","main","scripts","dev","build","clean","repository","type","url","keywords","author","license","bugs","homepage","devDependencies","babel-core","babel-loader","babel-preset-es2015","html-webpack-plugin","webpack","webpack-dev-server","createMockerDatabase","request","window","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","IDBTransaction","webkitIDBTransaction","msIDBTransaction","READ_WRITE","IDBKeyRange","webkitIDBKeyRange","msIDBKeyRange","open","onerror","Error","onsuccess","event","db","target","result","onupgradeneeded","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","getMockerRecord","checkMockerRecord","transaction","Promise","resolve","reject","index","method","e","addMockerRecord","add","response","deleteMockerRecord","updateMockerRecord","_typeof","test","undefined","Symbol","iterator","obj","constructor","_interopRequireDefault","resetXMLHttpRequest","XMLHttpRequest","_XMLHttpRequest","defineProperties","this","_xmlHttpRequest","writable","_listeners","_requestHeader","config","_config2","record","onload","onloadend","onloadstart","onprogress","onreadystatechange","ontimeout","readyState","responseText","responseType","responseURL","responseXML","status","statusText","MockXMLHttpRequestEventTarget","MockEventTarget","find","_Data","_util","_config","MockerHttpRequestPrototype","ActiveXObject","DONE","HEADERS_RECEIVED","LOADING","OPENED","UNSENT","abort","dispatchEvent","Event","getAllResponseHeaders","getResponseHeader","onabort","async","username","password","that","then","item","overrideMimeType","send","data","done","setRequestHeader","setTimeout","bind","upload","MockXMLHttpRequestEventTargetPrototype","MockEventTargetPrototype","addEventListener","callback","push","stack","getVariableType","length","removeEventListener","splice","createPrototypeChain","arguments","console","error","create","apply","Array","slice","toString","_Util","_interopRequireWildcard","newObj","_package","npmPackage","mocker","close","mock","log"],"mappings":"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","file":"mocker-min.1.0.0.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 9);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/**\n * Created by mac on 17/1/20.\n */\n// MockerHttpRequest\n\n// 默认mock延迟时间\nvar MOCKERHTTPREQUEST_DELAY = exports.MOCKERHTTPREQUEST_DELAY = 0;\n// 默认是否匹配到mock记录\n\nvar XHR_EVENTS = exports.XHR_EVENTS = {\n    READYSTATECHANGE: \"readystatechange\",\n    LOADSTART: \"loadstart\",\n    PROGRESS: \"progress\",\n    ABORT: \"abort\",\n    ERROR: \"error\",\n    LOAD: \"load\",\n    TIMEOUT: \"timeout\",\n    LOADEND: \"loadend\"\n};\n\nvar HTTP_STATUS_CODES = exports.HTTP_STATUS_CODES = {\n    100: \"Continue\",\n    101: \"Switching Protocols\",\n    200: \"OK\",\n    201: \"Created\",\n    202: \"Accepted\",\n    203: \"Non-Authoritative Information\",\n    204: \"No Content\",\n    205: \"Reset Content\",\n    206: \"Partial Content\",\n    300: \"Multiple Choice\",\n    301: \"Moved Permanently\",\n    302: \"Found\",\n    303: \"See Other\",\n    304: \"Not Modified\",\n    305: \"Use Proxy\",\n    307: \"Temporary Redirect\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    402: \"Payment Required\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    407: \"Proxy Authentication Required\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    411: \"Length Required\",\n    412: \"Precondition Failed\",\n    413: \"Request Entity Too Large\",\n    414: \"Request-URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Requested Range Not Satisfiable\",\n    417: \"Expectation Failed\",\n    422: \"Unprocessable Entity\",\n    500: \"Internal Server Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Gateway Timeout\",\n    505: \"HTTP Version Not Supported\"\n};\n\nvar MOCKER_DATABASE_NAME = exports.MOCKER_DATABASE_NAME = \"MockerDatabase\";\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Database = __webpack_require__(5);\n\nObject.keys(_Database).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Database[key];\n    }\n  });\n});\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _constant = __webpack_require__(0);\n\nexports.default = {\n    timeout: _constant.MOCKERHTTPREQUEST_DELAY\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _MockerHttpRequest = __webpack_require__(6);\n\nObject.keys(_MockerHttpRequest).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _MockerHttpRequest[key];\n    }\n  });\n});\nexports.default = _MockerHttpRequest.MockerHttpRequest; /**\n                                                         * Created by mac on 17/1/20.\n                                                         */\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\n\t\"name\": \"Mocker\",\n\t\"version\": \"1.0.0\",\n\t\"description\": \"A mock data management tool\",\n\t\"main\": \"index.js\",\n\t\"scripts\": {\n\t\t\"dev\": \" NODE_ENV=development webpack-dev-server --hot  --config config/webpack.config.js\",\n\t\t\"build\": \"npm run clean && NODE_ENV=production webpack --config config/webpack.config.js\",\n\t\t\"clean\": \"rm -rf dist\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/PaulShi666/Mocker.git\"\n\t},\n\t\"keywords\": [\n\t\t\"mock\",\n\t\t\"Http\"\n\t],\n\t\"author\": \"Paul\",\n\t\"license\": \"ISC\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/PaulShi666/Mocker/issues\"\n\t},\n\t\"homepage\": \"https://github.com/PaulShi666/Mocker#readme\",\n\t\"devDependencies\": {\n\t\t\"babel-core\": \"^6.22.1\",\n\t\t\"babel-loader\": \"^6.2.10\",\n\t\t\"babel-preset-es2015\": \"^6.22.0\",\n\t\t\"html-webpack-plugin\": \"^2.26.0\",\n\t\t\"webpack\": \"^2.2.1\",\n\t\t\"webpack-dev-server\": \"^1.16.2\"\n\t}\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.updateMockerRecord = exports.deleteMockerRecord = exports.addMockerRecord = exports.getMockerRecord = exports.createMockerDatabase = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _constant = __webpack_require__(0);\n\nvar db = void 0;\n\nfunction createMockerDatabase() {\n\n    //兼容性\n    var indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n    var IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || { READ_WRITE: \"readwrite\" };\n    var IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n\n    var request = window.indexedDB.open(_constant.MOCKER_DATABASE_NAME);\n    request.onerror = function () {\n        throw new Error(\"数据库创建失败\");\n    };\n\n    request.onsuccess = function (event) {\n        db = event.target.result;\n    };\n\n    request.onupgradeneeded = function (event) {\n        db = event.target.result;\n\n        // 创建表结构\n        var objectStore = db.createObjectStore(\"records\", {\n            keyPath: \"id\",\n            autoIncrement: true\n        });\n\n        objectStore.createIndex(\"methodUrl\", [\"method\", \"url\"], {\n            unique: true\n        });\n    };\n}\nfunction getMockerRecord(o) {\n    checkMockerRecord(o);\n\n    var objectStore = db.transaction(\"records\", \"readonly\").objectStore(\"records\");\n\n    return new Promise(function (resolve, reject) {\n        // 根据索引查询\n        objectStore.index('methodUrl').get([o.method, o.url]).onsuccess = function (e) {\n            resolve(e.target.result);\n        };\n    });\n}\nfunction addMockerRecord(o) {\n\n    checkMockerRecord(o);\n\n    var objectStore = db.transaction(\"records\", \"readwrite\").objectStore(\"records\");\n    var request = objectStore.add({\n        \"method\": o.method,\n        \"url\": o.url,\n        \"response\": o.response\n    });\n    request.onsuccess = function () {};\n    request.onerror = function () {\n        throw new Error(\"Mocker数据库添加失败\");\n    };\n}\n\nfunction deleteMockerRecord(o) {}\n\nfunction updateMockerRecord(o) {}\n\nfunction checkMockerRecord(o) {\n    // 检测输入参数\n    if (!((typeof o === \"undefined\" ? \"undefined\" : _typeof(o)) === 'object' && typeof o.method === 'string' && typeof o.url === 'string' && /^(get|post)$/i.test(o.method))) {\n        throw new Error('数据库mock参数非法');\n    }\n}\n\nexports.createMockerDatabase = createMockerDatabase;\nexports.getMockerRecord = getMockerRecord;\nexports.addMockerRecord = addMockerRecord;\nexports.deleteMockerRecord = deleteMockerRecord;\nexports.updateMockerRecord = updateMockerRecord;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.resetXMLHttpRequest = exports.MockerHttpRequest = undefined;\n\nvar _util = __webpack_require__(8);\n\nvar _constant = __webpack_require__(0);\n\nvar _config = __webpack_require__(2);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _Data = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//保存原生XMLHttpRequest\n/**\n * Created by mac on 17/1/20.\n */\n\nvar _XMLHttpRequest = window.XMLHttpRequest;\n//保存原生ActiveXObject\nvar _ActiveXObject = window.ActiveXObject;\n\nfunction resetXMLHttpRequest() {\n    window.XMLHttpRequest = _XMLHttpRequest;\n}\n\n//自定义XHR对象构造器\nfunction MockerHttpRequest() {\n\n    Object.defineProperties(this, {\n        _xmlHttpRequest: {\n            writable: false,\n            enumerable: false,\n            configurable: false\n        },\n        _listeners: {\n            value: {}\n        },\n        _requestHeader: {\n            value: {}\n\n        },\n        config: {\n            value: {\n                timeout: _config2.default.timeout,\n                // 数据库mock记录（延迟对象）\n                record: null\n            }\n        },\n        onerror: {\n            value: null\n        },\n        onload: {\n            value: null\n        },\n        onloadend: {\n            value: null\n        },\n        onloadstart: {\n            value: null\n        },\n        onprogress: {\n            value: null\n\n        },\n        onreadystatechange: {\n            value: null\n        },\n        ontimeout: {\n            value: null\n        },\n        readyState: {\n            value: 0,\n            writable: true\n        },\n        response: {\n            value: '',\n            writable: true\n        },\n        responseText: {\n            value: '',\n            writable: true\n        },\n        responseType: {\n            value: ''\n        },\n        responseURL: {\n            value: ''\n        },\n        responseXML: {\n            value: null\n        },\n        status: {\n            value: 0,\n            writable: true\n        },\n        statusText: {\n            value: \"\",\n            writable: true\n\n        },\n        timeout: {\n            value: 0\n\n        }\n    });\n}\n\nvar MockerHttpRequestPrototype = {\n    constructor: {\n        value: MockerHttpRequest,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    DONE: { value: 4 },\n    HEADERS_RECEIVED: { value: 2 },\n    LOADING: { value: 3 },\n    OPENED: { value: 1 },\n    UNSENT: { value: 0 },\n    abort: {\n        value: function value() {\n            this.readyState = MockerHttpRequestPrototype.UNSENT.value;\n            this.dispatchEvent(new Event(_constant.XHR_EVENTS.ABORT));\n            this.dispatchEvent(new Event(_constant.XHR_EVENTS.ERROR));\n        }\n    },\n    getAllResponseHeaders: {\n        value: function value() {}\n    },\n    getResponseHeader: {\n        value: function value() {}\n    },\n    onabort: {},\n    onerror: {},\n    onload: {},\n    onloadend: {},\n    onloadstart: {},\n    onprogress: {},\n    onreadystatechange: {},\n    ontimeout: {},\n    open: {\n        //推荐不要用箭头函数,词法作用域错误\n        value: function value(method, url, async, username, password) {\n\n            // 序列化请求\n            this.config.open = {\n                method: method,\n                url: url,\n                async: typeof async === 'boolean' ? async : true,\n                username: username,\n                password: password\n            };\n\n            var that = this;\n\n            //在Mock Indexdb记录中查询\n            this.config.record = find({ method: method, url: url }).then(function (item) {\n\n                if (!item) {\n                    //在Mock记录中没有查询到\n\n\n                } else {\n                    //在Mock记录中查询到\n\n                    that.readyState = MockerHttpRequestPrototype.OPENED.value;\n                    that.dispatchEvent(new Event(_constant.XHR_EVENTS.READYSTATECHANGE));\n                }\n                return item;\n            });\n        }\n    },\n    overrideMimeType: {\n        value: function value() {}\n    },\n    readyState: {},\n    response: {},\n    responseText: {},\n    responseType: {},\n    responseURL: {},\n    responseXML: {},\n    send: {\n        value: function value(data) {\n\n            // 序列化请求\n\n            var that = this;\n\n            this.config.record.then(function (item) {\n                //已经在open 时使用Mock Indexdb记录中查询\n\n                if (!item) {\n                    //在Mock记录中没有查询到\n                } else {\n                    //在Mock记录中查询到\n                    that.response = that.responseText = item.response;\n\n                    that.setRequestHeader('X-Requested-With', 'MockXMLHttpRequest');\n                    that.dispatchEvent(new Event(_constant.XHR_EVENTS.LOADSTART));\n\n                    //使用settimeout模拟异步\n                    if (that.config.open.async === true) {\n                        window.setTimeout(done.bind(that), that.config.timeout);\n                    } else {\n                        done.call(that);\n                    }\n                }\n            });\n\n            function done() {\n                this.readyState = MockerHttpRequestPrototype.HEADERS_RECEIVED.value;\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.READYSTATECHANGE));\n\n                this.readyState = MockerHttpRequestPrototype.LOADING.value;\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.READYSTATECHANGE));\n\n                this.status = 200;\n\n                this.statusText = _constant.HTTP_STATUS_CODES[200];\n\n                this.readyState = MockerHttpRequestPrototype.DONE.value;\n\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.READYSTATECHANGE));\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.LOAD));\n                this.dispatchEvent(new Event(_constant.XHR_EVENTS.LOADEND));\n            }\n        }\n    },\n    setRequestHeader: {\n        value: function value(key, _value) {\n            if (key in this._requestHeader) {\n                this._requestHeader[key] = ',' + _value;\n            } else {\n                this._requestHeader[key] = _value;\n            }\n        }\n    },\n    status: {},\n    statusText: {},\n    timeout: {},\n    upload: {}\n};\n\nfunction MockXMLHttpRequestEventTarget() {}\n\nvar MockXMLHttpRequestEventTargetPrototype = {\n    constructor: {\n        value: MockXMLHttpRequestEventTarget,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    onabort: {},\n    onerror: {},\n    onload: {},\n    onloadend: {},\n    onloadstart: {},\n    onprogress: {},\n    ontimeout: {}\n};\nfunction MockEventTarget() {}\nvar MockEventTargetPrototype = {\n    constructor: {\n        value: MockEventTarget,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    addEventListener: {\n        value: function value(type, callback) {\n            // type = 'on' + type;\n\n            if (!(type in this._listeners)) {\n                this._listeners[type] = [];\n            }\n\n            this._listeners[type].push(callback);\n\n            // 把回调函数返回，方便移除\n            return callback;\n        }\n    },\n    dispatchEvent: {\n        value: function value(event) {\n            if (!(event.type in this._listeners)) {\n                return;\n            }\n\n            var stack = this._listeners[event.type];\n\n            if ((0, _util.getVariableType)(stack) !== 'Array') {\n                return;\n            }\n            // 事件目标改写\n            // event.target = this;\n\n            for (var i = 0; i < stack.length; i++) {\n                stack[i].call(this, event);\n            }\n        }\n    },\n    removeEventListener: {\n        value: function value(type, callback) {\n            if (!(type in this._listeners)) {\n                return;\n            }\n\n            var stack = this._listeners[type];\n\n            if ((0, _util.getVariableType)(stack) !== 'Array') {\n                return;\n            }\n\n            for (var i = 0; i < stack.length; i++) {\n                if (stack[i] === callback) {\n                    stack[i].splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    }\n};\nfunction find(o) {\n    return (0, _Data.getMockerRecord)(o);\n}\n\n//MockerHttpRequest原型链模拟\nMockerHttpRequest.prototype = (0, _util.createPrototypeChain)(MockerHttpRequestPrototype, MockXMLHttpRequestEventTargetPrototype, MockEventTargetPrototype);\n\nexports.MockerHttpRequest = MockerHttpRequest;\nexports.resetXMLHttpRequest = resetXMLHttpRequest;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Created by mac on 17/1/20.\n */\n\n//使用Object.create建立原型链继承关系\nfunction createPrototypeChain() {\n    // console.log(arguments);\n    if (_typeof(arguments[0]) !== 'object') {\n        console.error('原型链属性为对象类型');\n        return;\n    }\n\n    if (arguments.length === 1) {\n        return Object.create(Object.prototype, arguments[0]);\n    } else {\n        return Object.create(createPrototypeChain.apply(null, Array.prototype.slice.call(arguments, 1)), arguments[0]);\n    }\n}\n\n// 获取精确类型\nfunction getVariableType(o) {\n    return Object.prototype.toString.call(o).slice(8, -1);\n}\n\nexports.createPrototypeChain = createPrototypeChain;\nexports.getVariableType = getVariableType;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Util = __webpack_require__(7);\n\nObject.keys(_Util).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _Util[key];\n    }\n  });\n});\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _package = __webpack_require__(4);\n\nvar npmPackage = _interopRequireWildcard(_package);\n\nvar _config = __webpack_require__(2);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _Data = __webpack_require__(1);\n\nvar _MockerHttpRequest = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n// 初始化Mocker\n/**\n * Created by mac on 17/1/17.\n */\n\nvar mocker = {\n    close: _MockerHttpRequest.resetXMLHttpRequest,\n    config: _config2.default,\n    version: npmPackage.version,\n    mock: function mock() {\n        _Data.addMockerRecord.apply(this, arguments);\n    }\n};\n\n// 修改原生的XMLHttpRequest\nif (window.XMLHttpRequest) {\n    window.XMLHttpRequest = _MockerHttpRequest.MockerHttpRequest;\n}\n\n// 给window对象增加mocker接口\nif (!window.mocker || window.mocker.version !== mocker.version) {\n    window.mocker = mocker;\n}\n\n//初始化Mocker对应数据库\ntry {\n    (0, _Data.createMockerDatabase)();\n} catch (e) {\n    console.log(e);\n}\n\nexports.default = mocker;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// mocker-min.1.0.0.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4f934ed6450b17d11833","/**\n * Created by mac on 17/1/20.\n */\n// MockerHttpRequest\n\n// 默认mock延迟时间\nexport const MOCKERHTTPREQUEST_DELAY = 0;\n// 默认是否匹配到mock记录\n\nexport const XHR_EVENTS = {\n    READYSTATECHANGE: \"readystatechange\",\n    LOADSTART: \"loadstart\",\n    PROGRESS: \"progress\",\n    ABORT: \"abort\",\n    ERROR: \"error\",\n    LOAD: \"load\",\n    TIMEOUT: \"timeout\",\n    LOADEND: \"loadend\"\n};\n\nexport const HTTP_STATUS_CODES = {\n    100: \"Continue\",\n    101: \"Switching Protocols\",\n    200: \"OK\",\n    201: \"Created\",\n    202: \"Accepted\",\n    203: \"Non-Authoritative Information\",\n    204: \"No Content\",\n    205: \"Reset Content\",\n    206: \"Partial Content\",\n    300: \"Multiple Choice\",\n    301: \"Moved Permanently\",\n    302: \"Found\",\n    303: \"See Other\",\n    304: \"Not Modified\",\n    305: \"Use Proxy\",\n    307: \"Temporary Redirect\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    402: \"Payment Required\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    407: \"Proxy Authentication Required\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    411: \"Length Required\",\n    412: \"Precondition Failed\",\n    413: \"Request Entity Too Large\",\n    414: \"Request-URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Requested Range Not Satisfiable\",\n    417: \"Expectation Failed\",\n    422: \"Unprocessable Entity\",\n    500: \"Internal Server Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Gateway Timeout\",\n    505: \"HTTP Version Not Supported\"\n};\n\nexport const MOCKER_DATABASE_NAME = \"MockerDatabase\";\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/constant.js","/**\n * Created by mac on 17/1/24.\n */\n\nexport * from './Database';\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/Data/index.js","import {\n    MOCKERHTTPREQUEST_DELAY,\n} from './constant';\n\nexport default {\n        timeout:MOCKERHTTPREQUEST_DELAY,\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/config.js","/**\n * Created by mac on 17/1/20.\n */\nimport {MockerHttpRequest} from './MockerHttpRequest';\n\nexport default MockerHttpRequest;\nexport * from './MockerHttpRequest';\n\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/MockerHttpRequest/index.js","module.exports = {\n\t\"name\": \"Mocker\",\n\t\"version\": \"1.0.0\",\n\t\"description\": \"A mock data management tool\",\n\t\"main\": \"index.js\",\n\t\"scripts\": {\n\t\t\"dev\": \" NODE_ENV=development webpack-dev-server --hot  --config config/webpack.config.js\",\n\t\t\"build\": \"npm run clean && NODE_ENV=production webpack --config config/webpack.config.js\",\n\t\t\"clean\": \"rm -rf dist\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/PaulShi666/Mocker.git\"\n\t},\n\t\"keywords\": [\n\t\t\"mock\",\n\t\t\"Http\"\n\t],\n\t\"author\": \"Paul\",\n\t\"license\": \"ISC\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/PaulShi666/Mocker/issues\"\n\t},\n\t\"homepage\": \"https://github.com/PaulShi666/Mocker#readme\",\n\t\"devDependencies\": {\n\t\t\"babel-core\": \"^6.22.1\",\n\t\t\"babel-loader\": \"^6.2.10\",\n\t\t\"babel-preset-es2015\": \"^6.22.0\",\n\t\t\"html-webpack-plugin\": \"^2.26.0\",\n\t\t\"webpack\": \"^2.2.1\",\n\t\t\"webpack-dev-server\": \"^1.16.2\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 4\n// module chunks = 0 1","import {MOCKER_DATABASE_NAME} from '../constant';\n\nlet db;\n\nfunction createMockerDatabase() {\n\n    //兼容性\n    let indexedDB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n    let IDBTransaction = window.IDBTransaction || window.webkitIDBTransaction || window.msIDBTransaction || {READ_WRITE: \"readwrite\"};\n    let IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange || window.msIDBKeyRange;\n\n    let request = window.indexedDB.open(MOCKER_DATABASE_NAME);\n    request.onerror = function () {\n        throw new Error(\"数据库创建失败\")\n    };\n\n    request.onsuccess = function (event) {\n        db = event.target.result;\n    };\n\n    request.onupgradeneeded = function (event) {\n        db = event.target.result;\n\n        // 创建表结构\n        let objectStore = db.createObjectStore(\"records\", {\n            keyPath: \"id\",\n            autoIncrement: true\n        });\n\n        objectStore.createIndex(\"methodUrl\", [\"method\", \"url\"], {\n            unique: true\n        });\n\n    }\n\n\n}\nfunction getMockerRecord(o) {\n    checkMockerRecord(o);\n\n    let objectStore = db.transaction(\"records\", \"readonly\").objectStore(\"records\");\n\n    return new Promise(function (resolve, reject) {\n        // 根据索引查询\n        objectStore.index('methodUrl').get([o.method, o.url]).onsuccess = function (e) {\n            resolve(e.target.result);\n        }\n    });\n\n\n}\nfunction addMockerRecord(o) {\n\n    checkMockerRecord(o);\n\n    let objectStore = db.transaction(\"records\", \"readwrite\").objectStore(\"records\");\n    let request = objectStore.add({\n        \"method\": o.method,\n        \"url\": o.url,\n        \"response\": o.response\n    });\n    request.onsuccess = function () {\n\n    };\n    request.onerror = function () {\n        throw new Error(\"Mocker数据库添加失败\");\n    }\n\n}\n\nfunction deleteMockerRecord(o) {\n\n}\n\nfunction updateMockerRecord(o) {\n\n}\n\nfunction checkMockerRecord(o) {\n    // 检测输入参数\n    if (!(typeof o === 'object' &&\n        typeof o.method === 'string' &&\n        typeof o.url === 'string' &&\n        /^(get|post)$/i.test(o.method))\n    ) {\n        throw new Error('数据库mock参数非法')\n    }\n}\n\nexport {\n    createMockerDatabase,\n    getMockerRecord,\n    addMockerRecord,\n    deleteMockerRecord,\n    updateMockerRecord\n}\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/Data/Database.js","/**\n * Created by mac on 17/1/20.\n */\n\nimport {createPrototypeChain, getVariableType} from '../util';\nimport {XHR_EVENTS, HTTP_STATUS_CODES} from '../constant';\nimport mockerConfig from '../config';\nimport {getMockerRecord} from '../Data';\n\n//保存原生XMLHttpRequest\nconst _XMLHttpRequest = window.XMLHttpRequest;\n//保存原生ActiveXObject\nconst _ActiveXObject = window.ActiveXObject;\n\nfunction resetXMLHttpRequest() {\n    window.XMLHttpRequest = _XMLHttpRequest;\n}\n\n//自定义XHR对象构造器\nfunction MockerHttpRequest() {\n\n    Object.defineProperties(this, {\n        _xmlHttpRequest: {\n            writable: false,\n            enumerable: false,\n            configurable: false\n        },\n        _listeners: {\n            value: {}\n        },\n        _requestHeader: {\n            value: {}\n\n        },\n        config: {\n            value: {\n                timeout: mockerConfig.timeout,\n                // 数据库mock记录（延迟对象）\n                record: null\n            }\n        },\n        onerror: {\n            value: null\n        },\n        onload: {\n            value: null\n        },\n        onloadend: {\n            value: null\n        },\n        onloadstart: {\n            value: null\n        },\n        onprogress: {\n            value: null\n\n        },\n        onreadystatechange: {\n            value: null\n        },\n        ontimeout: {\n            value: null\n        },\n        readyState: {\n            value: 0,\n            writable: true\n        },\n        response: {\n            value: '',\n            writable: true\n        },\n        responseText: {\n            value: '',\n            writable: true\n        },\n        responseType: {\n            value: ''\n        },\n        responseURL: {\n            value: ''\n        },\n        responseXML: {\n            value: null\n        },\n        status: {\n            value: 0,\n            writable: true\n        },\n        statusText: {\n            value: \"\",\n            writable: true\n\n        },\n        timeout: {\n            value: 0\n\n        }\n    });\n\n}\n\nlet MockerHttpRequestPrototype = {\n    constructor: {\n        value: MockerHttpRequest,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    DONE: {value: 4},\n    HEADERS_RECEIVED: {value: 2},\n    LOADING: {value: 3},\n    OPENED: {value: 1},\n    UNSENT: {value: 0},\n    abort: {\n        value: function () {\n            this.readyState = MockerHttpRequestPrototype.UNSENT.value;\n            this.dispatchEvent(new Event(XHR_EVENTS.ABORT));\n            this.dispatchEvent(new Event(XHR_EVENTS.ERROR));\n        }\n    },\n    getAllResponseHeaders: {\n        value: () => {\n        }\n    },\n    getResponseHeader: {\n        value: () => {\n        }\n    },\n    onabort: {},\n    onerror: {},\n    onload: {},\n    onloadend: {},\n    onloadstart: {},\n    onprogress: {},\n    onreadystatechange: {},\n    ontimeout: {},\n    open: {\n        //推荐不要用箭头函数,词法作用域错误\n        value: function (method, url, async, username, password) {\n\n\n            // 序列化请求\n            this.config.open = {\n                method: method,\n                url: url,\n                async: typeof async === 'boolean' ? async : true,\n                username: username,\n                password: password\n            };\n\n            let that = this;\n\n            //在Mock Indexdb记录中查询\n            this.config.record = find({method: method, url: url})\n                .then(function (item) {\n\n                    if (!item) {\n                        //在Mock记录中没有查询到\n\n\n                    } else {\n                        //在Mock记录中查询到\n\n                        that.readyState = MockerHttpRequestPrototype.OPENED.value;\n                        that.dispatchEvent(new Event(XHR_EVENTS.READYSTATECHANGE));\n                    }\n                    return item;\n                });\n\n\n        }\n    },\n    overrideMimeType: {\n        value: function () {\n        }\n    },\n    readyState: {},\n    response: {},\n    responseText: {},\n    responseType: {},\n    responseURL: {},\n    responseXML: {},\n    send: {\n        value: function (data) {\n\n\n            // 序列化请求\n\n            let that = this;\n\n            this.config.record.then(function (item) {\n                //已经在open 时使用Mock Indexdb记录中查询\n\n                if (!item) {\n                    //在Mock记录中没有查询到\n                } else {\n                    //在Mock记录中查询到\n                    that.response = that.responseText = item.response;\n\n                    that.setRequestHeader('X-Requested-With', 'MockXMLHttpRequest');\n                    that.dispatchEvent(new Event(XHR_EVENTS.LOADSTART));\n\n                    //使用settimeout模拟异步\n                    if (that.config.open.async === true) {\n                        window.setTimeout(done.bind(that), that.config.timeout);\n                    } else {\n                        done.call(that);\n                    }\n\n                }\n\n            });\n\n\n            function done() {\n                this.readyState = MockerHttpRequestPrototype.HEADERS_RECEIVED.value;\n                this.dispatchEvent(new Event(XHR_EVENTS.READYSTATECHANGE));\n\n                this.readyState = MockerHttpRequestPrototype.LOADING.value;\n                this.dispatchEvent(new Event(XHR_EVENTS.READYSTATECHANGE));\n\n                this.status = 200;\n\n                this.statusText = HTTP_STATUS_CODES[200];\n\n                this.readyState = MockerHttpRequestPrototype.DONE.value;\n\n                this.dispatchEvent(new Event(XHR_EVENTS.READYSTATECHANGE));\n                this.dispatchEvent(new Event(XHR_EVENTS.LOAD));\n                this.dispatchEvent(new Event(XHR_EVENTS.LOADEND));\n\n            }\n\n\n        }\n    },\n    setRequestHeader: {\n        value: function (key, value) {\n            if (key in this._requestHeader) {\n                this._requestHeader[key] = ',' + value;\n            } else {\n                this._requestHeader[key] = value;\n            }\n        }\n    },\n    status: {},\n    statusText: {},\n    timeout: {},\n    upload: {}\n};\n\nfunction MockXMLHttpRequestEventTarget() {\n}\n\nlet MockXMLHttpRequestEventTargetPrototype = {\n    constructor: {\n        value: MockXMLHttpRequestEventTarget,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    onabort: {},\n    onerror: {},\n    onload: {},\n    onloadend: {},\n    onloadstart: {},\n    onprogress: {},\n    ontimeout: {},\n};\nfunction MockEventTarget() {\n\n}\nlet MockEventTargetPrototype = {\n    constructor: {\n        value: MockEventTarget,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    },\n    addEventListener: {\n        value: function (type, callback) {\n            // type = 'on' + type;\n\n            if (!(type in this._listeners)) {\n                this._listeners[type] = []\n            }\n\n            this._listeners[type].push(callback);\n\n            // 把回调函数返回，方便移除\n            return callback;\n        }\n    },\n    dispatchEvent: {\n        value: function (event) {\n            if (!(event.type in this._listeners)) {\n                return;\n            }\n\n            let stack = this._listeners[event.type];\n\n            if (getVariableType(stack) !== 'Array') {\n                return;\n            }\n            // 事件目标改写\n            // event.target = this;\n\n            for (let i = 0; i < stack.length; i++) {\n                stack[i].call(this, event);\n            }\n        }\n    },\n    removeEventListener: {\n        value: function (type, callback) {\n            if (!(type in this._listeners)) {\n                return;\n            }\n\n            let stack = this._listeners[type];\n\n            if (getVariableType(stack) !== 'Array') {\n                return;\n            }\n\n            for (let i = 0; i < stack.length; i++) {\n                if (stack[i] === callback\n                ) {\n                    stack[i].splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    }\n};\nfunction find(o) {\n    return getMockerRecord(o);\n}\n\n//MockerHttpRequest原型链模拟\nMockerHttpRequest.prototype = createPrototypeChain(\n    MockerHttpRequestPrototype,\n    MockXMLHttpRequestEventTargetPrototype,\n    MockEventTargetPrototype\n);\n\n\nexport {MockerHttpRequest, resetXMLHttpRequest};\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/MockerHttpRequest/MockerHttpRequest.js","/**\n * Created by mac on 17/1/20.\n */\n\n//使用Object.create建立原型链继承关系\nfunction createPrototypeChain() {\n    // console.log(arguments);\n    if (typeof arguments[0] !== 'object') {\n        console.error('原型链属性为对象类型');\n        return;\n    }\n\n    if (arguments.length === 1) {\n        return Object.create(Object.prototype, arguments[0]);\n    } else {\n        return Object.create(\n            createPrototypeChain.apply(null, Array.prototype.slice.call(arguments, 1)),\n            arguments[0]\n        );\n    }\n}\n\n// 获取精确类型\nfunction getVariableType(o) {\n    return Object.prototype.toString.call(o).slice(8, -1);\n}\n\nexport {createPrototypeChain, getVariableType}\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/util/Util.js","/**\n * Created by mac on 17/1/20.\n */\nexport * from './Util'\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/util/index.js","/**\n * Created by mac on 17/1/17.\n */\n\nimport * as npmPackage from '../../package.json';\nimport mockerConfig from './config';\n\nimport {createMockerDatabase, addMockerRecord} from './Data';\nimport {\n    MockerHttpRequest,\n    resetXMLHttpRequest,\n} from './MockerHttpRequest';\n\n// 初始化Mocker\nconst mocker = {\n    close: resetXMLHttpRequest,\n    config: mockerConfig,\n    version: npmPackage.version,\n    mock: function () {\n        addMockerRecord.apply(this, arguments);\n    }\n};\n\n// 修改原生的XMLHttpRequest\nif (window.XMLHttpRequest) {\n    window.XMLHttpRequest = MockerHttpRequest;\n}\n\n// 给window对象增加mocker接口\nif (!window.mocker || window.mocker.version !== mocker.version) {\n    window.mocker = mocker;\n}\n\n//初始化Mocker对应数据库\ntry {\n    createMockerDatabase();\n} catch (e) {\n    console.log(e);\n}\n\nexport default mocker\n\n\n// WEBPACK FOOTER //\n// ./src/mocker/index.js"],"sourceRoot":""}